apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-pdv-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: app-pdv-app
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  selector:
    matchLabels:
      app: app-pdv-app
  template:
    metadata:
      labels:
        app: app-pdv-app
    spec:
      containers:
        - name: app-pdv-app
          image: kaiquemotta1997/app-pdv-app:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_APPLICATION_NAME
              value: "pdv"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://mysql:3306/pdv?allowPublicKeyRetrieval=true&useSSL=false"
            - name: SPRING_DATASOURCE_USERNAME
              value: "root"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "root"
          resources:  # Definir recursos para CPU e Memória
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1"
          livenessProbe:  # Verifica se o contêiner está vivo (precisa de ajuste baseado na sua aplicação)
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:  # Verifica se o contêiner está pronto para receber tráfego
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: app-pdv-service
spec:
  selector:
    app: app-pdv-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: NodePort
